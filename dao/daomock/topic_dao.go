// Code generated by mockery v1.0.0. DO NOT EDIT.
package daomock

import mock "github.com/stretchr/testify/mock"
import model "github.com/tommy351/diiig/model"

// TopicDAO is an autogenerated mock type for the TopicDAO type
type TopicDAO struct {
	mock.Mock
}

// Create provides a mock function with given fields: name
func (_m *TopicDAO) Create(name string) error {
	ret := _m.Called(name)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Range provides a mock function with given fields: start, end
func (_m *TopicDAO) Range(start int, end int) ([]model.Topic, error) {
	ret := _m.Called(start, end)

	var r0 []model.Topic
	if rf, ok := ret.Get(0).(func(int, int) []model.Topic); ok {
		r0 = rf(start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Topic)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Vote provides a mock function with given fields: name, vote
func (_m *TopicDAO) Vote(name string, vote int) error {
	ret := _m.Called(name, vote)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(name, vote)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
